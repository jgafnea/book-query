name: CI tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    # From https://github.com/marketplace/actions/python-poetry-action#workflow-example-cache-the-virtual-environment
    - uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v4

    - name: Install Poetry 
      uses: abatilo/actions-poetry@v4

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install

    - name: Run the automated tests (for example)
      run: poetry run pytest -v

